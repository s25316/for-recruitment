// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SimpleApp08__EF__CdF_.DatabaseLayer;

#nullable disable

namespace SimpleApp08__EF__CdF_.Migrations
{
    [DbContext(typeof(DatabaseContext))]
    [Migration("20240502233107_First")]
    partial class First
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("SimpleApp08__EF__CdF_.DatabaseLayer.Models.Doctor", b =>
                {
                    b.Property<int>("IdDoctor")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdDoctor"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar");

                    b.HasKey("IdDoctor")
                        .HasName("Doktor_pk");

                    b.ToTable("Doktor", (string)null);

                    b.HasData(
                        new
                        {
                            IdDoctor = 1,
                            Email = "kn@wp.pl",
                            FirstName = "Krzysztof",
                            LastName = "Nowak"
                        },
                        new
                        {
                            IdDoctor = 2,
                            Email = "wc@wp.pl",
                            FirstName = "Waldemar",
                            LastName = "Cegliński"
                        },
                        new
                        {
                            IdDoctor = 3,
                            Email = "kn@wp.pl",
                            FirstName = "Aadrzej",
                            LastName = "Chlebowski"
                        });
                });

            modelBuilder.Entity("SimpleApp08__EF__CdF_.DatabaseLayer.Models.Patient", b =>
                {
                    b.Property<int>("IdPatient")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdPatient"));

                    b.Property<DateOnly>("Birthdate")
                        .HasColumnType("date");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar");

                    b.HasKey("IdPatient")
                        .HasName("Patient_pk");

                    b.ToTable("Pacjent", (string)null);

                    b.HasData(
                        new
                        {
                            IdPatient = 1,
                            Birthdate = new DateOnly(1970, 1, 12),
                            FirstName = "Dariusz",
                            LastName = "Chuchrowski"
                        },
                        new
                        {
                            IdPatient = 2,
                            Birthdate = new DateOnly(1980, 5, 17),
                            FirstName = "Damian",
                            LastName = "Bystroń"
                        },
                        new
                        {
                            IdPatient = 3,
                            Birthdate = new DateOnly(1992, 9, 22),
                            FirstName = "Anna",
                            LastName = "Bryłka"
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
